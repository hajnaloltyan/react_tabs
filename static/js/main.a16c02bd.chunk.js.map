{"version":3,"sources":["components/Tabs/Tabs.tsx","api/tabs.ts","App.tsx","index.tsx"],"names":["Tabs","memo","tabs","selectedTabId","onTabSelected","selectedTab","useMemo","find","tab","id","changeTab","useCallback","className","map","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAsBC,gBACjC,YAIO,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcC,mBAClB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIL,IAAkBK,EAAIC,OAAOP,EAAK,KACzD,CAACC,IAGGO,EAAYC,uBAChB,SAACH,GACKL,IAAkBK,EAAIC,IACxBL,EAAcI,KAGlB,CAACL,IAGH,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAACL,GAAD,OACR,oBACEI,UAAWJ,EAAIC,KAAOJ,EAAYI,GAC9B,YACA,GACJ,UAAQ,MAJV,SAME,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAAML,EAAUF,IAH3B,SAKGA,EAAIQ,iBAOf,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGP,EAAYY,gBC5CRf,EANK,CAClB,CAAEO,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBCQ7BC,EAAU,WACrB,MAA0CC,mBAASjB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KAEMf,EAAcC,mBAClB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIL,IAAkBK,EAAIC,OAAOP,EAAK,KACzD,CAACC,IAGGC,EAAgBO,uBACpB,SAACH,GACCY,EAAiBZ,EAAIC,MACpB,CAACN,IAGN,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAYW,SAGlC,cAAChB,EAAD,CACEE,KAAMA,EACNC,cAAeA,EACfC,cAAeA,QCjCvBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a16c02bd.chunk.js","sourcesContent":["import {\n  FC,\n  memo,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { Tab, TabsProps } from '../../typedefs';\n\nexport const Tabs: FC<TabsProps> = memo(\n  ({\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  }) => {\n    const selectedTab = useMemo(\n      () => tabs.find(tab => selectedTabId === tab.id) || tabs[0],\n      [selectedTabId],\n    );\n\n    const changeTab = useCallback(\n      (tab: Tab) => {\n        if (selectedTabId !== tab.id) {\n          onTabSelected(tab);\n        }\n      },\n      [selectedTabId],\n    );\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                className={tab.id === selectedTab.id\n                  ? 'is-active'\n                  : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => changeTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    );\n  },\n);\n","import { Tab } from '../typedefs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport default tabs;\n","import {\n  FC,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport tabs from './api/tabs';\nimport { Tab } from './typedefs';\n\nexport const App: FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = useMemo(\n    () => tabs.find(tab => selectedTabId === tab.id) || tabs[0],\n    [selectedTabId],\n  );\n\n  const onTabSelected = useCallback(\n    (tab: Tab) => {\n      setSelectedTabId(tab.id);\n    }, [selectedTabId],\n  );\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}